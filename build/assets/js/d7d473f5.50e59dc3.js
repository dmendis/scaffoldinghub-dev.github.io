"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6245],{3905:(e,t,n)=>{n.d(t,{Zo:()=>f,kt:()=>d});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},f=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,f=l(e,["components","mdxType","originalType","parentName"]),m=p(n),c=r,d=m["".concat(s,".").concat(c)]||m[c]||u[c]||o;return n?a.createElement(d,i(i({ref:t},f),{},{components:n})):a.createElement(d,i({ref:t},f))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[m]="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},6510:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const o={sidebar_position:4,description:"scaffolding options for home and tests"},i="Generating options \ud83d\udd27",l={unversionedId:"static-scaffolding/generating-options",id:"static-scaffolding/generating-options",title:"Generating options \ud83d\udd27",description:"scaffolding options for home and tests",source:"@site/docs/static-scaffolding/generating-options.md",sourceDirName:"static-scaffolding",slug:"/static-scaffolding/generating-options",permalink:"/docs/static-scaffolding/generating-options",draft:!1,editUrl:"https://github.com/scaffoldinghub-dev/scaffoldinghub-dev.github.io/tree/main/docs/static-scaffolding/generating-options.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,description:"scaffolding options for home and tests"},sidebar:"tutorialSidebar",previous:{title:"Generating Scaffolding \ud83d\ude80",permalink:"/docs/static-scaffolding/generating-scaffolding"},next:{title:"Scaffolding Tests \ud83e\uddea",permalink:"/docs/static-scaffolding/scaffolding-tests"}},s={},p=[{value:"Interactive prompt",id:"interactive-prompt",level:2},{value:"Command line parameters",id:"command-line-parameters",level:2},{value:"Configuration json file",id:"configuration-json-file",level:2},{value:"Test options",id:"test-options",level:2}],f={toc:p};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"generating-options-"},"Generating options \ud83d\udd27"),(0,r.kt)("p",null,"Use mason allows you to either use the ",(0,r.kt)("a",{parentName:"p",href:"#interactive-prompt"},"interactive questions"),", provide the ",(0,r.kt)("a",{parentName:"p",href:"#command-line-parameters"},"paramaters on the command line")," or in a ",(0,r.kt)("a",{parentName:"p",href:"#configuration-json-file"},"configuration json file"),". "),(0,r.kt)("p",null,"We saw in the last step how to answer the questions for each. The full set of options are as follows:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Variable"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"package")),(0,r.kt)("td",{parentName:"tr",align:null},"The name of the package this is generated into"),(0,r.kt)("td",{parentName:"tr",align:null},"scaffolding_sample"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"feature")),(0,r.kt)("td",{parentName:"tr",align:null},"The name of the feature"),(0,r.kt)("td",{parentName:"tr",align:null},"feature1"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"properties")),(0,r.kt)("td",{parentName:"tr",align:null},"string of the properties of this feature (string,bool,num)"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"generate_tests")),(0,r.kt)("td",{parentName:"tr",align:null},"Generate units tests using scaffolding-tests brick"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"boolean"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"generate_home")),(0,r.kt)("td",{parentName:"tr",align:null},"Generate home/main files tests using scaffolding-main brick"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"boolean"))))),(0,r.kt)("p",null,"Each option typically takes a single word or true/false except the properties option. This option takes a string that has a special format to allow us to specify the properties of a domain entity/feature. "),(0,r.kt)("p",null,"The format is as follows:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"Type name=defaultValue\n")),(0,r.kt)("p",null,"If there is more than one property then they are separed by a comma as follows:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"String firstname=Scott, String lastname=Horn, int age=25, bool registered=false\n")),(0,r.kt)("p",null,"If this is specified on the command line it needs to be in double quotes as follows:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'--properties "String firstname=Scott, String lastname=Horn, int age=25, bool registered=false"\n')),(0,r.kt)("p",null,"Currently the dart types supported for scaffolding are ",(0,r.kt)("inlineCode",{parentName:"p"},"String, bool, int, double"),". More will be added in a future version. "),(0,r.kt)("p",null,"We will look at the three ways to specify these when scaffolding next. "),(0,r.kt)("h2",{id:"interactive-prompt"},"Interactive prompt"),(0,r.kt)("p",null,"This was covered in the previous section and will add a quick summary example here:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'mason make scaffolding\n? What is the package name of your flutter project? (scaffolding_sample) static_scaffolding_sample\n? What is your feature name (eg. Todo, DiaryProject, contact) ? (feature1) feature1\n? Enter property list in the following format "String firstname=Your first name, String lastname=Your suranme, bool registered=false" ? String firstname=Your first name, String lastname=Your suranme, bool registered=false\n? Do you want unit tests generated? n\n? Do you want to generate the home page / main function ? (y/N) y\n')),(0,r.kt)("h2",{id:"command-line-parameters"},"Command line parameters"),(0,r.kt)("p",null,"To specific the same options as for the interactive prompt we would run the following:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'mason make scaffolding --package static_scaffolding_sample --feature feature1 \\\n    --properties "String firstname=Your first name, String lastname=Your suranme, bool registered=false" \\\n    --generate-tests false --generate-home true\n')),(0,r.kt)("h2",{id:"configuration-json-file"},"Configuration json file"),(0,r.kt)("p",null,"The same for the configuration file with the namem ",(0,r.kt)("inlineCode",{parentName:"p"},"config.json")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "package": "static_scaffolding_sample",\n  "feature": "feature1",\n  "generate-tests": false,\n  "generate-home": true,\n  "properties": "String firstname=Your first name, String lastname=Your suranme, bool registered=false"\n}\n')),(0,r.kt)("p",null,"and this is run as:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"mason make scaffolding -c config.json\n")),(0,r.kt)("h2",{id:"test-options"},"Test options"),(0,r.kt)("p",null,"So far we have asked not to scaffold the unit tests. We will learn about automatically scaffolding our unit tests next."))}m.isMDXComponent=!0}}]);